<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="30" failures="0" errors="0" time="35.501">
  <testsuite name="`My Network` actions" errors="0" failures="0" skipped="0" timestamp="2021-06-15T12:48:32" time="7.733" tests="2">
    <testcase classname="`My Network` actions SEARCH_PENDING and SEARCH_FULFILLED after successful call action `search`" name="`My Network` actions SEARCH_PENDING and SEARCH_FULFILLED after successful call action `search`" time="0.111">
    </testcase>
    <testcase classname="`My Network` actions SEARCH_PENDING and SEARCH_REJECTED after call unsuccessful (without id parameter) action `search`" name="`My Network` actions SEARCH_PENDING and SEARCH_REJECTED after call unsuccessful (without id parameter) action `search`" time="0.118">
    </testcase>
  </testsuite>
  <testsuite name="`BasicButton` render component" errors="0" failures="0" skipped="0" timestamp="2021-06-15T12:48:32" time="23.108" tests="4">
    <testcase classname="`BasicButton` render component does not throw warning with expected props" name="`BasicButton` render component does not throw warning with expected props" time="0.003">
    </testcase>
    <testcase classname="`BasicButton` render component renders BasicButton component to be there" name="`BasicButton` render component renders BasicButton component to be there" time="0.005">
    </testcase>
    <testcase classname="`BasicButton` render component renders BasicButton component without error" name="`BasicButton` render component renders BasicButton component without error" time="0.005">
    </testcase>
    <testcase classname="`BasicButton` render component clicking on button" name="`BasicButton` render component clicking on button" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="renders ColumnSegment with default props" errors="0" failures="0" skipped="0" timestamp="2021-06-15T12:48:32" time="23.275" tests="5">
    <testcase classname="renders ColumnSegment with default props does not throw warning with expected props" name="renders ColumnSegment with default props does not throw warning with expected props" time="0.003">
    </testcase>
    <testcase classname="renders ColumnSegment with default props renders text `Title` when prop titleId is empty" name="renders ColumnSegment with default props renders text `Title` when prop titleId is empty" time="0.097">
    </testcase>
    <testcase classname="renders ColumnSegment only with empty required props renders without error with no props" name="renders ColumnSegment only with empty required props renders without error with no props" time="0.004">
    </testcase>
    <testcase classname="renders ColumnSegment with values in props `data` correct number of rows if props `data` has some attributes" name="renders ColumnSegment with values in props `data` correct number of rows if props `data` has some attributes" time="0.002">
    </testcase>
    <testcase classname="renders ColumnSegment with values in props `data` correct values in rows if props `data` has some attributes" name="renders ColumnSegment with values in props `data` correct values in rows if props `data` has some attributes" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="`My Network` integration" errors="0" failures="0" skipped="0" timestamp="2021-06-15T12:48:40" time="15.434" tests="2">
    <testcase classname="`My Network` integration get `connectedCompany` from reducer state after succesfully call action `search`" name="`My Network` integration get `connectedCompany` from reducer state after succesfully call action `search`" time="0.132">
    </testcase>
    <testcase classname="`My Network` integration get `true` in `isError` from reducer state after unsuccesfully call action `search`" name="`My Network` integration get `true` in `isError` from reducer state after unsuccesfully call action `search`" time="0.109">
    </testcase>
  </testsuite>
  <testsuite name="`My Network` reducers" errors="0" failures="0" skipped="0" timestamp="2021-06-15T12:48:55" time="0.166" tests="3">
    <testcase classname="`My Network` reducers when previos state is undefined, return false" name="`My Network` reducers when previos state is undefined, return false" time="0.001">
    </testcase>
    <testcase classname="`My Network` reducers return previos state when uknown action type" name="`My Network` reducers return previos state when uknown action type" time="0">
    </testcase>
    <testcase classname="`My Network` reducers return `companyNetworkConnection` for action type SEARCH_FULFILLED" name="`My Network` reducers return `companyNetworkConnection` for action type SEARCH_FULFILLED" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="`services` function getObjectWithoutEmptyElements" errors="0" failures="0" skipped="0" timestamp="2021-06-15T12:48:55" time="0.296" tests="5">
    <testcase classname="`services` function getObjectWithoutEmptyElements works only for first level of object! Function returns the same object, if parameter is object with &quot;&quot;, null, undefined in second and next levels" name="`services` function getObjectWithoutEmptyElements works only for first level of object! Function returns the same object, if parameter is object with &quot;&quot;, null, undefined in second and next levels" time="0.004">
    </testcase>
    <testcase classname="`services` function getObjectWithoutEmptyElements returns the same value if parametr is {}, [], &quot;&quot;, 0, null, undefined, false or true " name="`services` function getObjectWithoutEmptyElements returns the same value if parametr is {}, [], &quot;&quot;, 0, null, undefined, false or true " time="0.001">
    </testcase>
    <testcase classname="`services` function getObjectWithoutEmptyElements returns the same object if parameter is object without null, &quot;&quot;, undefined elements" name="`services` function getObjectWithoutEmptyElements returns the same object if parameter is object without null, &quot;&quot;, undefined elements" time="0.001">
    </testcase>
    <testcase classname="`services` function getObjectWithoutEmptyElements returns the same object without atributes with null, undefined, &quot;&quot;, if parameter is object with null, undefined, &quot;&quot; values in attributes" name="`services` function getObjectWithoutEmptyElements returns the same object without atributes with null, undefined, &quot;&quot;, if parameter is object with null, undefined, &quot;&quot; values in attributes" time="0">
    </testcase>
    <testcase classname="`services` function getObjectWithoutEmptyElements returns the same object if parameter is object with 0, false, {}, [] values in atributes" name="`services` function getObjectWithoutEmptyElements returns the same object if parameter is object with 0, false, {}, [] values in atributes" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="`My Network` renders InviteModal" errors="0" failures="0" skipped="0" timestamp="2021-06-15T12:48:32" time="23.783" tests="3">
    <testcase classname="`My Network` renders InviteModal does not throw warning with expected props" name="`My Network` renders InviteModal does not throw warning with expected props" time="0.168">
    </testcase>
    <testcase classname="`My Network` renders InviteModal state updates with value of input box upon on change" name="`My Network` renders InviteModal state updates with value of input box upon on change" time="0.018">
    </testcase>
    <testcase classname="`My Network` renders InviteModal search button simulate click" name="`My Network` renders InviteModal search button simulate click" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="`My Network` renders InviteModal" errors="0" failures="0" skipped="0" timestamp="2021-06-15T12:48:56" time="1.498" tests="1">
    <testcase classname="`My Network` renders InviteModal does not throw warning with expected props" name="`My Network` renders InviteModal does not throw warning with expected props" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="`BasicButton` render component" errors="0" failures="0" skipped="0" timestamp="2021-06-15T12:48:56" time="2.645" tests="2">
    <testcase classname="`BasicButton` render component does not throw warning with expected props" name="`BasicButton` render component does not throw warning with expected props" time="0.002">
    </testcase>
    <testcase classname="`BasicButton` render component renders BasicButton component to be there" name="`BasicButton` render component renders BasicButton component to be there" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="`My Network` renders InviteModal" errors="0" failures="0" skipped="0" timestamp="2021-06-15T12:48:56" time="3.713" tests="1">
    <testcase classname="`My Network` renders InviteModal does not throw warning with expected props" name="`My Network` renders InviteModal does not throw warning with expected props" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="`BasicButton` render component" errors="0" failures="0" skipped="0" timestamp="2021-06-15T12:48:55" time="5.972" tests="2">
    <testcase classname="`BasicButton` render component does not throw warning with expected props" name="`BasicButton` render component does not throw warning with expected props" time="0.002">
    </testcase>
    <testcase classname="`BasicButton` render component renders BasicButton component to be there" name="`BasicButton` render component renders BasicButton component to be there" time="0.003">
    </testcase>
  </testsuite>
</testsuites>